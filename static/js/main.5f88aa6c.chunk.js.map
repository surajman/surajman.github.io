{"version":3,"sources":["Tabs/Tab/Tab.jsx","Tabs/Tabs.jsx","ItemRow/ItemRow.jsx","Modal/Modal.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Tab","onClick","props","label","this","activeTab","className","Component","Tabs","onClickTabItem","tab","setState","state","children","map","child","key","React","ItemRow","epochDate","createdOn","region","name","csvSrc","priceText","image_url","calendarSrc","priceSrc","statsSrc","toggleModal","handleChange","openCalander","isCalendarOpen","timeDiff","differenceInDays","Date","format","src","process","alt","selected","onChange","date","inline","modal","show","style","transform","opacity","close","App","data","selectedPrice","bind","x","find","upcomingData","filter","liveData","pastData","paddingTop","monthPrice","sixMonthPrice","yearPrice","length","row","handleSelect","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f88aa6c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Tab extends Component {\r\n  static propTypes = {\r\n    activeTab: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  onClick = () => {\r\n    const { label, onClick } = this.props;\r\n    onClick(label);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onClick,\r\n      props: {\r\n        activeTab,\r\n        label,\r\n      },\r\n    } = this;\r\n\r\n    let className = 'tab-list-item';\r\n\r\n    if (activeTab === label) {\r\n      className += ' tab-list-active';\r\n    }\r\n\r\n    return (\r\n      <li\r\n        className={className}\r\n        onClick={onClick}\r\n      >\r\n        {label}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tab;","import React from 'react';\r\nimport Tab from './Tab/Tab.jsx';\r\nexport class Tabs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTab: -1,\r\n        }\r\n        this.state = {\r\n            activeTab: this.props.children[0].props.label,\r\n          };\r\n    }\r\n\r\n    onClickTabItem = (tab) => {\r\n        this.setState({ activeTab: tab });\r\n      }\r\n\r\n    render() {\r\n        const {\r\n            onClickTabItem,\r\n            props: {\r\n              children,\r\n            },\r\n            state: {\r\n              activeTab,\r\n            }\r\n          } = this;\r\n        return (\r\n            <div className=\"tabs\">\r\n                <ul className=\"tabs-title\">\r\n                    {children.map((child) => {\r\n                        const { label } = child.props;\r\n                        return <Tab activeTab={activeTab}\r\n                                    key={label}\r\n                                    label={label}\r\n                                    onClick={onClickTabItem} />\r\n                    })}\r\n                </ul>\r\n        <div className=\"tab-content\">\r\n          {children.map((child) => {\r\n            if (child.props.label !== activeTab) return undefined;\r\n            return child.props.children;\r\n          })}\r\n        </div>\r\n            </div>\r\n        );\r\n    }\r\n}","/* eslint-disable */\r\nimport React from 'react';\r\nimport './ItemRow.css';\r\nimport { format, differenceInDays } from 'date-fns';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst formatDate = (epochDate) => format(epochDate, 'MMM yyyy, dd');\r\n\r\nconst ItemRow = (props) => {\r\n    const { createdOn, region, name, csvSrc, priceText, image_url, calendarSrc, priceSrc, statsSrc,  toggleModal, handleChange, openCalander, isCalendarOpen } = props;\r\n    const timeDiff = differenceInDays(createdOn, new Date());\r\n    return (\r\n        <div className=\"row-container\">\r\n            <div className=\"date-container\">\r\n                <div>\r\n                    {formatDate(createdOn)}\r\n                </div>\r\n                <div>\r\n                    {timeDiff > 0 ? timeDiff+' days ago' : -1 * timeDiff + 'days before'}\r\n                </div>\r\n            </div>\r\n            <div className=\"campaign-container\">\r\n                <img src={`${process.env.PUBLIC_URL}${image_url}`} alt=\"image\" className=\"main-icon\" /> &nbsp;\r\n                <span className=\"item-details\">\r\n                    <div>\r\n                        {name}\r\n                    </div>\r\n                    <div>\r\n                        {region}\r\n                    </div>\r\n                </span>\r\n            </div>\r\n            <div className=\"price-container\">\r\n                <img src={`${process.env.PUBLIC_URL}${priceSrc}`} className=\"helper-icon\"></img>\r\n                <span className=\"price-clickable\" onClick={() => toggleModal(name)}>{priceText}</span>\r\n            </div>\r\n            <div className=\"action-container\">\r\n                <img src={`${process.env.PUBLIC_URL}${csvSrc}`} className=\"helper-icon\"></img> &nbsp; CSV &nbsp;&nbsp;\r\n                <img src={`${process.env.PUBLIC_URL}${statsSrc}`} className=\"helper-icon\"></img> &nbsp; Report &nbsp;&nbsp;\r\n                <span className=\"clickable\" onClick={() => openCalander(name)}>\r\n                    <img src={`${process.env.PUBLIC_URL}${calendarSrc}`} className=\"helper-icon\"></img> &nbsp; Schedule Again\r\n                </span>\r\n                {isCalendarOpen ? <div className=\"calendar-style\">\r\n                    <DatePicker\r\n                    selected={createdOn}\r\n                    onChange={date => handleChange(date, name)}\r\n                    inline /></div> : null}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ItemRow;","import React from 'react';\r\n\r\nimport './Modal.css';\r\n\r\nconst modal = (props) => {\r\n    return (\r\n        <div className={props.show ? 'modal' : 'modal modal-closed'}>\r\n            <div className=\"modal-wrapper\"\r\n                style={{\r\n                    transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\r\n                    opacity: props.show ? '1' : '0'\r\n                }}>\r\n                <div className=\"modal-body\">\r\n                    <div>\r\n                        {props.children}\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button className=\"btn-cancel\" onClick={props.close}>CLOSE</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default modal;","import React from 'react';\r\n\r\nimport { Tabs } from './Tabs/Tabs';\r\nimport ItemRow from './ItemRow/ItemRow';\r\nimport Modal from './Modal/Modal';\r\nimport './Tabs/Tabs.css';\r\nimport data from './data/sample.json';\r\nimport { differenceInDays } from 'date-fns';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data,\r\n      show: false,\r\n      selectedPrice: null,\r\n    };\r\n    this.openCalander = this.openCalander.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n  }\r\n  componentWillMount() {\r\n    this.setState(state => ({data}));\r\n  }\r\n  handleChange(date, name) {\r\n    const data = {\r\n      data: this.state.data.data.map(x => {\r\n        if (x.name === name) {\r\n          x.createdOn = date;\r\n          x.isCalendarOpen = false;\r\n        }\r\n      return {...x};\r\n      })\r\n    }\r\n    this.setState(state => ({data}));\r\n  }\r\n  openCalander(name) {\r\n    const data = {\r\n      data: this.state.data.data.map(x => {\r\n        if (x.name === name) {\r\n          x.isCalendarOpen = true;\r\n        }\r\n      return {...x};\r\n      })\r\n    }\r\n    this.setState(state => ({data}));\r\n  }\r\n  toggleModal(name) {\r\n    const data = this.state.data.data.find(x => (x.name === name))\r\n    this.setState(state => ({...this.state, show: !this.state.show, selectedPrice: this.state.show ? null : data}))\r\n  }\r\n  render() {\r\n    const upcomingData = this.state.data.data.filter(x => differenceInDays(x.createdOn, new Date()) > 0);\r\n    const liveData = this.state.data.data.filter(x => differenceInDays(x.createdOn, new Date()) === 0);\r\n    const pastData = this.state.data.data.filter(x => differenceInDays(x.createdOn, new Date()) < 0);\r\n    return (\r\n      <div className=\"main-page\">\r\n        <h1 className=\"header\">Manage Campaigns</h1>\r\n        <Modal className=\"modal\"\r\n               show={this.state.show}\r\n               close={this.toggleModal}>\r\n                <div>\r\n                  <div className=\"modal-head-container\">\r\n                    <img src={this.state.selectedPrice && this.state.selectedPrice.image_url} alt=\"\"/> &nbsp;\r\n                    <div className=\"modal-name-country-container\">\r\n                      <div>{this.state.selectedPrice && this.state.selectedPrice.name}</div>\r\n                      <div>{this.state.selectedPrice && this.state.selectedPrice.region}</div>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div style={{paddingTop: '15px'}}>Pricing</div>\r\n                    <div className=\"modal-price-container\">\r\n                      <div>1 Week - 1 Month</div>\r\n                      <div>{this.state.selectedPrice && this.state.selectedPrice.monthPrice} $500</div>\r\n                    </div>\r\n                    <div className=\"modal-price-container\">\r\n                      <div>6 Months</div>\r\n                      <div>{this.state.selectedPrice && this.state.selectedPrice.sixMonthPrice}$700</div>\r\n                    </div>\r\n                    <div className=\"modal-price-container\">\r\n                      <div>1 Year</div>\r\n                      <div>{this.state.selectedPrice && this.state.selectedPrice.yearPrice}$5000</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n        </Modal>\r\n        <Tabs>\r\n          <div label=\"Upcoming Campaigns\">\r\n            {upcomingData.length ? upcomingData.map(row => <ItemRow {...row} priceText=\"View Pricing\" key={row.name} handleSelect={this.handleSelect} handleChange={this.handleChange} isCalendarOpen={row.isCalendarOpen} openCalander={this.openCalander} toggleModal={this.toggleModal} />) : <div>No Data Found</div>}\r\n          </div>\r\n          <div label=\"Live Campaigns\">\r\n          {liveData.length ? liveData.map(row => <ItemRow {...row} priceText=\"View Pricing\" key={row.name} handleSelect={this.handleSelect} handleChange={this.handleChange} isCalendarOpen={row.isCalendarOpen} openCalander={this.openCalander} toggleModal={this.toggleModal} />) : <div>No Data Found</div>}\r\n          </div>\r\n          <div label=\"Past Campaigns\">\r\n          {pastData.length ? pastData.map(row => <ItemRow {...row} priceText=\"View Pricing\" key={row.name} handleSelect={this.handleSelect} handleChange={this.handleChange} isCalendarOpen={row.isCalendarOpen} openCalander={this.openCalander} toggleModal={this.toggleModal} />) : <div>No Data Found</div>}\r\n          </div>\r\n        </Tabs>\r\n      </div>\r\n    );}\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}